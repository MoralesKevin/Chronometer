{"version":3,"sources":["Chronometre.jsx","App.js","serviceWorker.js","index.js"],"names":["Chronometre","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","centiemes","secondes","minutes","heures","centiemesInter","secondesInter","minutesInter","heuresInter","stop","tour","intervalle","count","AddZeroFormat","bind","assertThisInitialized","tempsTour","reset","Stop","_this2","setInterval","setState","number","concat","arr","alert","push","console","log","_this3","react_default","a","createElement","className","onClick","map","lap","indexOf","inter","Component","App","src_Chronometre_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4553a9a1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Chronometre.css';\r\n\r\nclass Chronometre extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            centiemes: 0,\r\n            secondes: 0,\r\n            minutes: 0,\r\n            heures: 0,\r\n            centiemesInter: 0,\r\n            secondesInter: 0,\r\n            minutesInter: 0,\r\n            heuresInter: 0,\r\n            stop: false,\r\n            tour: [,],\r\n            intervalle: [,],\r\n            count: 0,\r\n        }\r\n        this.AddZeroFormat = this.AddZeroFormat.bind(this);\r\n        this.tempsTour = this.tempsTour.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        this.Stop = this.Stop.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            if (this.state.centiemes < 100 && this.state.stop === true) {\r\n                this.setState({\r\n                    centiemes: (this.state.centiemes + 1),\r\n                    centiemesInter: (this.state.centiemesInter + 1),\r\n                })\r\n            }\r\n        }, 10);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        if (this.state.stop === true) {\r\n            if (this.state.centiemes > 99) {\r\n                this.setState({\r\n                    centiemes: 0,\r\n                    secondes: this.state.secondes + 1,\r\n                });\r\n            } else if (this.state.centiemesInter > 99) {\r\n                this.setState({\r\n                    centiemesInter: 0,\r\n                    secondesInter: this.state.secondesInter + 1,\r\n                })\r\n            } else if (this.state.secondes > 59) {\r\n                this.setState({\r\n                    secondes: 0,\r\n                    minutes: this.state.minutes + 1,\r\n                });\r\n            } else if (this.state.secondesInter > 59) {\r\n                this.setState({\r\n                    secondesInter: 0,\r\n                    minutesInter: this.state.secondesInter + 1,\r\n                })\r\n            } else if (this.state.minutes > 59) {\r\n                this.setState({\r\n                    minutes: 0,\r\n                    heures: this.state.heures + 1,\r\n                });\r\n            } else if (this.state.minutesInter > 59) {\r\n                this.setState({\r\n                    minutesInter: 0,\r\n                    heuresInter: this.state.secondesInter + 1,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    AddZeroFormat(number) {\r\n        return number < 10 ? `0${number}` : number;\r\n    }\r\n\r\n    Stop() {\r\n        this.setState({\r\n            stop: !this.state.stop,\r\n        })\r\n    }\r\n\r\n    tempsTour() {\r\n        const arr = this.state.tour;\r\n        const count = this.state.count;\r\n        const intervalle = this.state.intervalle;\r\n\r\n\r\n\r\n        if (arr[count] === `${this.AddZeroFormat(this.state.heures)} : ${this.AddZeroFormat(this.state.minutes)} : ${this.AddZeroFormat(this.state.secondes)} : ${this.AddZeroFormat(this.state.centiemes)}`) {\r\n            alert(\"Vous ne pouvez pas sauvegarder 2 fois le mÃªme tour.\");\r\n            this.setState({\r\n                count: count,\r\n            })\r\n        } else {\r\n\r\n            arr.push(`${this.AddZeroFormat(this.state.heures)} : ${this.AddZeroFormat(this.state.minutes)} : ${this.AddZeroFormat(this.state.secondes)} : ${this.AddZeroFormat(this.state.centiemes)}`);\r\n\r\n            intervalle.push(`${this.AddZeroFormat(this.state.heuresInter)} : ${this.AddZeroFormat(this.state.minutesInter)} : ${this.AddZeroFormat(this.state.secondesInter)} : ${this.AddZeroFormat(this.state.centiemesInter)}`);\r\n\r\n            this.setState({\r\n                tour: arr,\r\n                intervalle: intervalle,\r\n                count: count + 1,\r\n                centiemesInter: 0,\r\n                secondesInter: 0,\r\n                minutesInter: 0,\r\n                heuresInter: 0,\r\n\r\n            })\r\n            console.log(intervalle);\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({\r\n            centiemes: 0,\r\n            secondes: 0,\r\n            minutes: 0,\r\n            heures: 0,\r\n            tour: [,],\r\n            intervalle: [,],\r\n            count: 0,\r\n            centiemesInter: 0,\r\n            secondesInter: 0,\r\n            minutesInter: 0,\r\n            heuresInter: 0,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Chronometre\">\r\n                <h1>chronometer</h1>\r\n                <h3>{this.AddZeroFormat(this.state.heures)} : {this.AddZeroFormat(this.state.minutes)} : {this.AddZeroFormat(this.state.secondes)} : {this.AddZeroFormat(this.state.centiemes)}</h3>\r\n\r\n                <button onClick={this.Stop}>START / STOP</button>\r\n                <button onClick={this.tempsTour}>LAP</button>\r\n                <button onClick={this.reset} >RESET</button>\r\n\r\n                <div className=\"tableauTemps\">\r\n                    <div className=\"tempsDuTour\">\r\n                        <h2>Lap time :</h2>\r\n\r\n                        {this.state.tour.map(lap => (\r\n                            <p className={`temps`}> <span className=\"numTemps\">{this.state.tour.indexOf(lap)}</span> - {lap} <br/> <hr/> </p>))\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"intervalle\">\r\n                        <h2>Interval :</h2>\r\n\r\n                        {this.state.intervalle.map(inter => (\r\n                            <p className={`inter`}> <span className=\"numInter\">{this.state.intervalle.indexOf(inter)}</span> - {inter} <br/> <hr/></p>))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chronometre;","import React, { Component } from 'react';\nimport './App.css';\nimport Chronometre from './Chronometre';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"chronometre\">\n          <Chronometre />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}